trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - Build/*
    - Deploy/*

variables:
    dockerid:   'bjd145'
    imageName:  'bjd145/chatws:$(Build.BuildId)'

stages:
- stage: build
  jobs: 
  - job: 'Build_And_Push'
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
    - bash: |
        export GOPATH=`pwd` 
        go get github.com/gorilla/websocket
        go get github.com/gin-contrib/cors
        go get github.com/gin-gonic/gin
        go get github.com/gin-gonic/contrib/static
        go get gopkg.in/resty.v1
      
    - bash: |
        cd src
        docker build -t $(imageName) .
        echo $(dockerPassword) | docker login -u $(dockerId) --password-stdin
        docker push $(imageName)

    - task: CopyFiles@2
      inputs:
        SourceFolder: Deploy
        TargetFolder: '$(build.artifactstagingdirectory)'

    - task: PublishBuildArtifacts@1
   
- stage: deploy
  jobs:
  - deployment: 'Deploy_To_AKS'
    pool:
      vmImage: 'Ubuntu 16.04'
    environment: 'AKS.chat'
    strategy:
      runOnce:
        deploy:
          steps:
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                targetPath: '$(System.ArtifactsDirectory)/'

            - task: HelmInstaller@0
              displayName: 'Install Helm 2.9.1'

            - task: HelmDeploy@0
              displayName: 'helm init'
              inputs:
                azureSubscription: 'BJD_APP02_Subscription'
                azureResourceGroup: 'DevSub02_K8S_RG'
                kubernetesCluster: bjdk8s
                command: init
                arguments: ' --service-account tiller'

            - task: HelmDeploy@0
              displayName: 'helm upgrade'
              inputs:
                azureSubscription: 'BJD_APP02_Subscription'
                azureResourceGroup: 'DevSub02_K8S_RG'
                kubernetesCluster: bjdk8s
                command: upgrade
                chartName: '$(System.ArtifactsDirectory)/drop/Helm'
                releaseName: 'sentiment-chat'
                overrideValues: 'sentimentapi_key=$(cogsApiKey),chat_image_version=$(Build.BuildId) '
                valueFile: '$(System.ArtifactsDirectory)/drop/Helm/values.yaml'
                arguments: --namespace chat